const Jimp = require('jimp');
const path = require('path');
const fs = require('fs').promises;

async function generateSummaryImage(data) {
    const { totalCountries, topCountries, lastRefreshed } = data;
    
    // Create image: 800x600
    const image = new Jimp(800, 600, '#FFFFFF');
    
    // Load font
    const font = await Jimp.loadFont(Jimp.FONT_SANS_16_BLACK);
    const fontLarge = await Jimp.loadFont(Jimp.FONT_SANS_32_BLACK);
    
    // Title
    image.print(fontLarge, 50, 30, 'Country Data Summary');
    
    // Total countries
    image.print(font, 50, 100, `Total Countries: ${totalCountries}`);
    
    // Last refreshed
    const refreshDate = new Date(lastRefreshed).toLocaleString();
    image.print(font, 50, 130, `Last Refreshed: ${refreshDate}`);
    
    // Top 5 countries by GDP
    image.print(fontLarge, 50, 180, 'Top 5 Countries by Estimated GDP:');
    
    let yPos = 230;
    topCountries.forEach((country, index) => {
        const gdp = country.estimated_gdp 
            ? `$${Number(country.estimated_gdp).toLocaleString('en-US', { maximumFractionDigits: 2 })}`
            : 'N/A';
        
        const text = `${index + 1}. ${country.name} - ${gdp}`;
        image.print(font, 70, yPos, text);
        yPos += 40;
    });
    
    // Footer
    image.print(font, 50, 550, 'Generated by Country Currency API');
    
    // Ensure cache directory exists
    const cacheDir = path.join(__dirname, '..', 'cache');
    try {
        await fs.access(cacheDir);
    } catch {
        await fs.mkdir(cacheDir, { recursive: true });
    }
    
    // Save image
    const imagePath = path.join(cacheDir, 'summary.png');
    await image.writeAsync(imagePath);
    
    return imagePath;
}

module.exports = { generateSummaryImage };
