const sharp = require('sharp');
const path = require('path');
const fs = require('fs').promises;

async function generateSummaryImage(data) {
    const { totalCountries, topCountries, lastRefreshed } = data;
    
    try {
        // Create SVG text content
        const refreshDate = new Date(lastRefreshed).toLocaleString();
        
        let topCountriesText = '';
        topCountries.forEach((country, index) => {
            const gdp = country.estimated_gdp 
                ? `$${Number(country.estimated_gdp).toLocaleString('en-US', { maximumFractionDigits: 2 })}`
                : 'N/A';
            topCountriesText += `<text x="70" y="${230 + (index * 40)}" font-size="16" fill="#333">${index + 1}. ${country.name} - ${gdp}</text>`;
        });

        const svgImage = `
        <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
            <rect width="800" height="600" fill="#ffffff"/>
            
            <!-- Title -->
            <text x="50" y="60" font-size="32" font-weight="bold" fill="#000">Country Data Summary</text>
            
            <!-- Total Countries -->
            <text x="50" y="120" font-size="16" fill="#333">Total Countries: ${totalCountries}</text>
            
            <!-- Last Refreshed -->
            <text x="50" y="150" font-size="16" fill="#333">Last Refreshed: ${refreshDate}</text>
            
            <!-- Top 5 Header -->
            <text x="50" y="210" font-size="28" font-weight="bold" fill="#000">Top 5 Countries by Estimated GDP:</text>
            
            <!-- Top 5 Countries -->
            ${topCountriesText}
            
            <!-- Footer -->
            <text x="50" y="570" font-size="16" fill="#666">Generated by Country Currency API</text>
        </svg>
        `;

        // Ensure cache directory exists
        const cacheDir = path.join(__dirname, '..', 'cache');
        try {
            await fs.access(cacheDir);
        } catch {
            await fs.mkdir(cacheDir, { recursive: true });
        }
        
        // Convert SVG to PNG and save
        const imagePath = path.join(cacheDir, 'summary.png');
        await sharp(Buffer.from(svgImage))
            .png()
            .toFile(imagePath);
        
        return imagePath;
    } catch (error) {
        console.error('Image generation error:', error);
        throw error;
    }
}

module.exports = { generateSummaryImage };
